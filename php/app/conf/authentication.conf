# ---------------------------------------------------
# Optional authentication configuration options
# ---------------------------------------------------

# ---------------------------------------------------
# LDAP
# ---------------------------------------------------
# Authentication via Lightweight Directory Access Protocol (LDAP) query
# to a directory server (like OpenLDAP slapd, Active Directory Server, etc.).
# Note that this feature requires the "ldap" PHP module which is not checked
# in the standard CollectiveAccess configuration checks.

use_ldap = 0

ldap_host = ldap.mysite.org
ldap_port = 389

ldap_base_dn = dc=mysite,dc=org
ldap_user_ou = ou=Users
ldap_group_cn = [CollectiveAccessUsers,CollectiveAccessAdmins]

# lists of roles/groups for newly created users

ldap_users_default_roles = [cataloguer]
ldap_users_default_groups = [cataloguer]

# automatically activate new users? (otherwise they can't log in)

ldap_users_auto_active = 1


# ---------------------------------------------------
# Authentication using an external database (extdb)
# ---------------------------------------------------
# Note: the values below are defaults. They MUST be changed
# to work with your own external authentication database
#

# Set to 1 to use external authentication
use_extdb = 0

# Login for external auth database
extdb_host = localhost
extdb_username = your_auth_database_login
extdb_password = your_auth_database_password
extdb_database = your_auth_database_name
extdb_db_type = mysql

# The table and fields in the external database to use for authentication
extdb_table = users
extdb_username_field = email
extdb_password_field = password

# How the external database hashes passwords
# 	For plain-text passwords use "none"
# Possible values are: md5, sha1, none
extdb_password_hash_type = md5

# How to determine from the external database if the user is active
#	If all users in the external database are active set extdb_default_active = 1
extdb_default_active = 0
extdb_active_field = status
extdb_active_field_map = {
	Active = 1,
	active = 1,
	Disabled = 0,
	none = 0
}

# How to determine from the external database what the class of user is
# 	possible CA values are none, public and full
#	"public" means Pawtucket (front-end) login only, "full" means both Pawtucket and Providence (back-end)
extdb_access_field = access
extdb_access_field_map = {
	Member = public,
	Staff = full
}
extdb_default_access = none

# Roles granted to login from external database
extdb_roles_field = access
# extdb value = assoc list of CA roles
extdb_roles_field_map = {
	Member = { cataloguer }
}
extdb_default_roles = { }

# Groups granted to login from external database
extdb_groups_field = access
# extdb value = assoc list of CA groups
extdb_groups_field_map = {
	Member = { cataloguers }
}
extdb_default_groups = { cataloguers }

# Fields to copy from external database to newly created CA user record
# 	extdb field = ca_users field
extdb_user_field_map = {
	email = email,
	firstname = fname,
	lastname = lname
}

# Fields to copy from external database to  user preferences in newly created CA user record
# 	extdb field = ca user pref
extdb_user_pref_map = {
	cur_address1 = user_profile_address1,
	cur_address2 = user_profile_address2,
	cur_city = user_profile_city,
	cur_state = user_profile_state,
	cur_country = user_profile_country,
	cur_postal_code = user_profile_postalcode,
	primary_phone = user_profile_phone
}